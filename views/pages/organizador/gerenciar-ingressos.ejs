<div class="max-w-6xl mx-auto">
  <!-- Header da página -->
  <div class="mb-8">
    <div class="flex items-center space-x-4 mb-4">
      <a href="/organizador/eventos" class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </a>
      <div>
        <h1 class="text-3xl font-bold text-primary-800">Gerenciar Ingressos</h1>
        <p class="text-primary-600"><%= evento.nome_evento %></p>
      </div>
    </div>
    <div class="flex items-center space-x-4 text-sm text-primary-600">
      <span class="flex items-center">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
        <%= new Date(evento.data_hora_inicio).toLocaleDateString('pt-BR') %>
      </span>
      <span class="flex items-center">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <%= evento.local_evento %>
      </span>
    </div>
  </div>

  <!-- Navegação rápida -->
  <div class="flex items-center space-x-4 mb-6">
    <a href="/organizador/eventos/<%= evento.id %>/editar" class="px-4 py-2 border border-primary-300 text-primary-700 rounded-lg hover:bg-primary-50 transition-colors duration-200">
      Editar Evento
    </a>
    <a href="/organizador/eventos/<%= evento.id %>/lineup" class="px-4 py-2 border border-primary-300 text-primary-700 rounded-lg hover:bg-primary-50 transition-colors duration-200">
      Gerenciar Line-up
    </a>
    <a href="/eventos/<%= evento.id %>" target="_blank" class="px-4 py-2 border border-primary-300 text-primary-700 rounded-lg hover:bg-primary-50 transition-colors duration-200">
      Ver Página Pública
    </a>
  </div>

  <!-- Mensagem de resultado -->
  <div id="mensagem-resultado" class="hidden mb-6"></div>

  <!-- Resumo de vendas -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
    <div class="bg-white rounded-xl shadow-lg p-6 border border-primary-100">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-primary-600 text-sm font-medium">Total de Tipos</p>
          <p class="text-2xl font-bold text-primary-800" id="total-tipos"><%= tiposIngresso.length %></p>
        </div>
        <div class="bg-blue-100 p-3 rounded-lg">
          <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 border border-primary-100">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-primary-600 text-sm font-medium">Ingressos Vendidos</p>
          <p class="text-2xl font-bold text-primary-800" id="total-vendidos">
            <% 
              let totalVendidos = 0;
              tiposIngresso.forEach(tipo => {
                totalVendidos += (tipo.quantidade_total - tipo.quantidade_disponivel);
              });
            %>
            <%= totalVendidos %>
          </p>
        </div>
        <div class="bg-green-100 p-3 rounded-lg">
          <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 border border-primary-100">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-primary-600 text-sm font-medium">Ingressos Disponíveis</p>
          <p class="text-2xl font-bold text-primary-800" id="total-disponiveis">
            <% 
              let totalDisponiveis = 0;
              tiposIngresso.forEach(tipo => {
                totalDisponiveis += tipo.quantidade_disponivel;
              });
            %>
            <%= totalDisponiveis %>
          </p>
        </div>
        <div class="bg-yellow-100 p-3 rounded-lg">
          <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 border border-primary-100">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-primary-600 text-sm font-medium">Receita Total</p>
          <p class="text-2xl font-bold text-primary-800" id="receita-total">
            <% 
              let receitaTotal = 0;
              tiposIngresso.forEach(tipo => {
                const vendidos = tipo.quantidade_total - tipo.quantidade_disponivel;
                receitaTotal += vendidos * tipo.preco;
              });
            %>
            R$ <%= receitaTotal.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
          </p>
        </div>
        <div class="bg-primary-100 p-3 rounded-lg">
          <svg class="w-6 h-6 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
          </svg>
        </div>
      </div>
    </div>
  </div>

  <!-- Adicionar novo tipo de ingresso -->
  <div class="bg-white rounded-xl shadow-lg border border-primary-100 mb-6">
    <div class="p-6 border-b border-primary-100">
      <h2 class="text-xl font-semibold text-primary-800">Adicionar Novo Tipo de Ingresso</h2>
    </div>
    
    <form id="form-novo-ingresso" class="p-6">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
          <label for="nome_tipo" class="block text-sm font-medium text-primary-700 mb-2">Nome do Tipo *</label>
          <input 
            type="text" 
            id="nome_tipo" 
            name="nome_tipo" 
            required
            placeholder="Ex: Pista, VIP, Camarote"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div>
          <label for="preco" class="block text-sm font-medium text-primary-700 mb-2">Preço (R$) *</label>
          <input 
            type="number" 
            id="preco" 
            name="preco" 
            required
            min="0"
            step="0.01"
            placeholder="0,00"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div>
          <label for="quantidade_total" class="block text-sm font-medium text-primary-700 mb-2">Quantidade *</label>
          <input 
            type="number" 
            id="quantidade_total" 
            name="quantidade_total" 
            required
            min="1"
            placeholder="100"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div class="flex items-end">
          <button 
            type="submit" 
            class="w-full px-4 py-2 bg-primary-600 text-white rounded-lg font-medium hover:bg-primary-700 transition-colors duration-200"
          >
            Adicionar
          </button>
        </div>
      </div>
    </form>
  </div>

  <!-- Lista de tipos de ingresso -->
  <div class="bg-white rounded-xl shadow-lg border border-primary-100">
    <div class="p-6 border-b border-primary-100">
      <h2 class="text-xl font-semibold text-primary-800">Tipos de Ingresso</h2>
    </div>
    
    <div id="lista-ingressos">
      <% if (tiposIngresso.length === 0) { %>
        <div class="p-8 text-center">
          <svg class="w-16 h-16 text-primary-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
          </svg>
          <h3 class="text-lg font-medium text-primary-600 mb-2">Nenhum tipo de ingresso criado</h3>
          <p class="text-primary-500">Adicione tipos de ingresso para começar a vender!</p>
        </div>
      <% } else { %>
        <div class="divide-y divide-primary-100">
          <% tiposIngresso.forEach(tipo => { %>
            <div class="p-6 ingresso-item" data-ingresso-id="<%= tipo.id %>">
              <div class="flex items-center justify-between">
                <!-- Informações do ingresso -->
                <div class="flex-1">
                  <div class="flex items-center space-x-4 mb-2">
                    <h3 class="text-lg font-semibold text-primary-800"><%= tipo.nome_tipo %></h3>
                    <span class="text-2xl font-bold text-primary-600">R$ <%= parseFloat(tipo.preco).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></span>
                  </div>
                  
                  <div class="grid grid-cols-1 md:grid-cols-4 gap-4 text-sm">
                    <div>
                      <span class="text-primary-600 font-medium">Total:</span>
                      <span class="text-primary-800"><%= tipo.quantidade_total %> ingressos</span>
                    </div>
                    <div>
                      <span class="text-primary-600 font-medium">Vendidos:</span>
                      <span class="text-primary-800"><%= tipo.quantidade_total - tipo.quantidade_disponivel %> ingressos</span>
                    </div>
                    <div>
                      <span class="text-primary-600 font-medium">Disponíveis:</span>
                      <span class="text-primary-800"><%= tipo.quantidade_disponivel %> ingressos</span>
                    </div>
                    <div>
                      <span class="text-primary-600 font-medium">Receita:</span>
                      <span class="text-primary-800">R$ <%= ((tipo.quantidade_total - tipo.quantidade_disponivel) * tipo.preco).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></span>
                    </div>
                  </div>

                  <!-- Barra de progresso -->
                  <div class="mt-3">
                    <div class="flex items-center justify-between text-xs text-primary-600 mb-1">
                      <span>Vendas</span>
                      <span><%= Math.round(((tipo.quantidade_total - tipo.quantidade_disponivel) / tipo.quantidade_total) * 100) %>%</span>
                    </div>
                    <div class="w-full bg-primary-100 rounded-full h-2">
                      <div 
                        class="bg-primary-600 h-2 rounded-full transition-all duration-300" 
                        style="width: <%= ((tipo.quantidade_total - tipo.quantidade_disponivel) / tipo.quantidade_total) * 100 %>%"
                      ></div>
                    </div>
                  </div>
                </div>

                <!-- Ações -->
                <div class="flex items-center space-x-2 ml-6">
                  <button 
                    onclick="editarIngresso(<%= tipo.id %>)"
                    class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200"
                    title="Editar"
                  >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                  </button>
                  
                  <% if (tipo.quantidade_total === tipo.quantidade_disponivel) { %>
                    <button 
                      onclick="confirmarExclusaoIngresso(<%= tipo.id %>)"
                      class="text-red-600 hover:text-red-700 p-2 rounded-lg hover:bg-red-100 transition-colors duration-200"
                      title="Excluir"
                    >
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                      </svg>
                    </button>
                  <% } else { %>
                    <span class="text-gray-400 p-2" title="Não é possível excluir - há ingressos vendidos">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                      </svg>
                    </span>
                  <% } %>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      <% } %>
    </div>
  </div>
</div>

<!-- Modal de edição de ingresso -->
<div id="modal-editar-ingresso" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
  <div class="bg-white rounded-xl p-6 max-w-md w-full mx-4">
    <h3 class="text-lg font-semibold text-primary-800 mb-4">Editar Tipo de Ingresso</h3>
    
    <form id="form-editar-ingresso">
      <input type="hidden" id="edit-ingresso-id">
      
      <div class="space-y-4">
        <div>
          <label for="edit-nome-tipo" class="block text-sm font-medium text-primary-700 mb-2">Nome do Tipo</label>
          <input 
            type="text" 
            id="edit-nome-tipo" 
            required
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div>
          <label for="edit-preco" class="block text-sm font-medium text-primary-700 mb-2">Preço (R$)</label>
          <input 
            type="number" 
            id="edit-preco" 
            required
            min="0"
            step="0.01"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div>
          <label for="edit-quantidade-total" class="block text-sm font-medium text-primary-700 mb-2">Quantidade Total</label>
          <input 
            type="number" 
            id="edit-quantidade-total" 
            required
            min="1"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
        
        <div>
          <label for="edit-quantidade-disponivel" class="block text-sm font-medium text-primary-700 mb-2">Quantidade Disponível</label>
          <input 
            type="number" 
            id="edit-quantidade-disponivel" 
            required
            min="0"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>
      </div>
      
      <div class="flex items-center justify-end space-x-4 mt-6">
        <button type="button" onclick="fecharModalEdicao()" class="px-4 py-2 text-primary-600 hover:text-primary-700">
          Cancelar
        </button>
        <button type="submit" class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700">
          Salvar
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Modal de confirmação de exclusão -->
<div id="modal-exclusao-ingresso" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
  <div class="bg-white rounded-xl p-6 max-w-md w-full mx-4">
    <h3 class="text-lg font-semibold text-primary-800 mb-4">Confirmar Exclusão</h3>
    <p class="text-primary-600 mb-6">Tem certeza que deseja excluir este tipo de ingresso?</p>
    <div class="flex items-center justify-end space-x-4">
      <button onclick="fecharModalExclusaoIngresso()" class="px-4 py-2 text-primary-600 hover:text-primary-700">
        Cancelar
      </button>
      <button id="confirmar-exclusao-ingresso" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">
        Excluir
      </button>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const formNovoIngresso = document.getElementById('form-novo-ingresso');
  const formEditarIngresso = document.getElementById('form-editar-ingresso');
  const mensagemResultado = document.getElementById('mensagem-resultado');

  // Adicionar novo ingresso
  formNovoIngresso.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const dados = Object.fromEntries(formData.entries());

    try {
      const response = await fetch(`/organizador/eventos/<%= evento.id %>/ingressos`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        },
        body: JSON.stringify(dados)
      });

      const resultado = await response.json();

      if (response.ok) {
        mostrarMensagem(resultado.message || 'Tipo de ingresso criado com sucesso!', 'success');
        setTimeout(() => {
          location.reload();
        }, 1500);
      } else {
        mostrarMensagem(resultado.error || 'Erro ao criar tipo de ingresso', 'error');
      }
    } catch (error) {
      console.error('Erro:', error);
      mostrarMensagem('Erro de conexão. Tente novamente.', 'error');
    }
  });

  // Editar ingresso
  formEditarIngresso.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const ingressoId = document.getElementById('edit-ingresso-id').value;
    const dados = {
      nome_tipo: document.getElementById('edit-nome-tipo').value,
      preco: document.getElementById('edit-preco').value,
      quantidade_total: document.getElementById('edit-quantidade-total').value,
      quantidade_disponivel: document.getElementById('edit-quantidade-disponivel').value
    };

    try {
      const response = await fetch(`/organizador/eventos/<%= evento.id %>/ingressos/${ingressoId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        },
        body: JSON.stringify(dados)
      });

      const resultado = await response.json();

      if (response.ok) {
        mostrarMensagem(resultado.message || 'Tipo de ingresso atualizado com sucesso!', 'success');
        fecharModalEdicao();
        setTimeout(() => {
          location.reload();
        }, 1500);
      } else {
        mostrarMensagem(resultado.error || 'Erro ao atualizar tipo de ingresso', 'error');
      }
    } catch (error) {
      console.error('Erro:', error);
      mostrarMensagem('Erro de conexão. Tente novamente.', 'error');
    }
  });

  function mostrarMensagem(texto, tipo) {
    mensagemResultado.textContent = texto;
    mensagemResultado.className = `mb-6 p-4 rounded-lg ${
      tipo === 'success' 
        ? 'bg-green-100 border border-green-400 text-green-700' 
        : 'bg-red-100 border border-red-400 text-red-700'
    }`;
    mensagemResultado.classList.remove('hidden');
    
    setTimeout(() => {
      mensagemResultado.classList.add('hidden');
    }, 5000);
  }

  // Tornar função disponível globalmente
  window.mostrarMensagem = mostrarMensagem;
});

// Funções globais
let ingressoParaExcluir = null;

function editarIngresso(ingressoId) {
  // Buscar dados do ingresso (seria melhor fazer uma requisição, mas por simplicidade vamos usar os dados da página)
  const ingressoElement = document.querySelector(`[data-ingresso-id="${ingressoId}"]`);
  
  // Preencher o modal com os dados (implementação simplificada)
  document.getElementById('edit-ingresso-id').value = ingressoId;
  document.getElementById('modal-editar-ingresso').classList.remove('hidden');
}

function fecharModalEdicao() {
  document.getElementById('modal-editar-ingresso').classList.add('hidden');
}

function confirmarExclusaoIngresso(ingressoId) {
  ingressoParaExcluir = ingressoId;
  document.getElementById('modal-exclusao-ingresso').classList.remove('hidden');
}

function fecharModalExclusaoIngresso() {
  document.getElementById('modal-exclusao-ingresso').classList.add('hidden');
  ingressoParaExcluir = null;
}

document.getElementById('confirmar-exclusao-ingresso').addEventListener('click', async function() {
  if (!ingressoParaExcluir) return;

  try {
    const response = await fetch(`/organizador/eventos/<%= evento.id %>/ingressos/${ingressoParaExcluir}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });

    const resultado = await response.json();

    if (response.ok) {
      mostrarMensagem(resultado.message || 'Tipo de ingresso excluído com sucesso!', 'success');
      setTimeout(() => {
        location.reload();
      }, 1500);
    } else {
      mostrarMensagem(resultado.error || 'Erro ao excluir tipo de ingresso', 'error');
    }
  } catch (error) {
    console.error('Erro:', error);
    mostrarMensagem('Erro de conexão. Tente novamente.', 'error');
  }

  fecharModalExclusaoIngresso();
});
</script>

