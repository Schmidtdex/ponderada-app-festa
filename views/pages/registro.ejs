<head>
    <script src="htthttps://cdn.tailwindcss.com"></script>
</head>


<div class="max-w-md mx-auto bg-white p-8 rounded-lg shadow-md">
  <h1 class="text-2xl font-bold text-center text-gray-800 mb-6">Registro de Usuário</h1>
  
  <div id="mensagem-resultado" class="hidden"></div>
  
  <form id="form-registro" class="space-y-4">
    <div>
      <label for="nome_completo" class="block text-sm font-medium text-gray-700 mb-1">Nome Completo</label>
      <input type="text" id="nome_completo" name="nome_completo" required 
        class="form-input w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
    </div>
    
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
      <input type="email" id="email" name="email" required 
        class="form-input w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
    </div>
    
    <div>
      <label for="senha" class="block text-sm font-medium text-gray-700 mb-1">Senha</label>
      <input type="password" id="senha" name="senha" required 
        class="form-input w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
    </div>
    
    <div>
      <label for="tipo_usuario" class="block text-sm font-medium text-gray-700 mb-1">Tipo de Usuário</label>
      <select id="tipo_usuario" name="tipo_usuario" required 
        class="form-select w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
        <option value="">Selecione...</option>
        <option value="cliente">Cliente</option>
        <option value="organizador">Organizador</option>
      </select>
    </div>
    
    <div class="pt-4">
      <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out">
        Registrar
      </button>
      <p class="text-center mt-4 text-sm text-gray-600">
        Já tem uma conta? <a href="/login" class="text-blue-600 hover:text-blue-800">Faça login</a>
      </p>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const formRegistro = document.getElementById('form-registro');
    const mensagemResultado = document.getElementById('mensagem-resultado');
    
    formRegistro.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Limpar mensagens anteriores
      mensagemResultado.textContent = '';
      mensagemResultado.className = 'hidden';
      
      // Coletar dados do formulário
      const dadosUsuario = {
        nome_completo: document.getElementById('nome_completo').value,
        email: document.getElementById('email').value,
        senha: document.getElementById('senha').value,
        tipo_usuario: document.getElementById('tipo_usuario').value
      };
      
      try {
        // Enviar requisição para a API
        const resposta = await fetch('/api/usuarios/registrar', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(dadosUsuario)
        });
        
        const dados = await resposta.json();
        
        if (resposta.ok) {
          // Registro bem-sucedido
          mensagemResultado.textContent = 'Registro realizado com sucesso! Redirecionando para o login...';
          mensagemResultado.className = 'alert-success bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4';
          
          // Armazenar informações do usuário (exceto senha) no localStorage
          const usuarioInfo = {
            id: dados.id,
            nome_completo: dados.nome_completo,
            email: dados.email,
            tipo_usuario: dados.tipo_usuario
          };
          
          localStorage.setItem('usuarioInfo', JSON.stringify(usuarioInfo));
          
          // Redirecionar para a página de login após 2 segundos
          setTimeout(() => {
            window.location.href = '/login';
          }, 2000);
        } else {
          // Erro no registro
          mensagemResultado.textContent = dados.error || 'Erro ao registrar usuário. Tente novamente.';
          mensagemResultado.className = 'alert-error bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4';
        }
      } catch (erro) {
        console.error('Erro:', erro);
        mensagemResultado.textContent = 'Erro de conexão. Verifique sua internet e tente novamente.';
        mensagemResultado.className = 'alert-error bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4';
      }
    });
  });
</script>
