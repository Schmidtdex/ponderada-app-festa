<div class="max-w-7xl mx-auto">
  <!-- Header da página -->
  <div class="mb-8">
    <div class="flex items-center justify-between mb-4">
      <h1 class="text-3xl font-bold text-primary-800">Meus Eventos</h1>
      <a href="/organizador/eventos/criar" class="bg-primary-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-primary-700 transition-colors duration-200 flex items-center space-x-2">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
        </svg>
        <span>Novo Evento</span>
      </a>
    </div>
    <p class="text-primary-600">Gerencie todos os seus eventos em um só lugar.</p>
  </div>

  <!-- Filtros e Busca -->
  <div class="bg-white rounded-xl shadow-lg border border-primary-100 mb-6">
    <div class="p-6">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <!-- Busca por nome -->
        <div>
          <label for="busca-nome" class="block text-sm font-medium text-primary-700 mb-2">Buscar por nome</label>
          <input 
            type="text" 
            id="busca-nome" 
            placeholder="Nome do evento..."
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>

        <!-- Filtro por status -->
        <div>
          <label for="filtro-status" class="block text-sm font-medium text-primary-700 mb-2">Status</label>
          <select id="filtro-status" class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
            <option value="">Todos</option>
            <option value="futuro">Futuros</option>
            <option value="passado">Passados</option>
            <option value="hoje">Hoje</option>
          </select>
        </div>

        <!-- Filtro por data -->
        <div>
          <label for="filtro-data" class="block text-sm font-medium text-primary-700 mb-2">Data</label>
          <input 
            type="date" 
            id="filtro-data"
            class="w-full px-4 py-2 border border-primary-200 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          >
        </div>

        <!-- Botão de limpar filtros -->
        <div class="flex items-end">
          <button 
            id="limpar-filtros"
            class="w-full px-4 py-2 border border-primary-300 text-primary-700 rounded-lg hover:bg-primary-50 transition-colors duration-200"
          >
            Limpar Filtros
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Mensagem de resultado -->
  <div id="mensagem-resultado" class="hidden mb-6"></div>

  <!-- Lista de Eventos -->
  <div class="bg-white rounded-xl shadow-lg border border-primary-100">
    <div class="p-6 border-b border-primary-100">
      <h2 class="text-xl font-semibold text-primary-800">Seus Eventos</h2>
    </div>
    
    <div id="lista-eventos" class="divide-y divide-primary-100">
      <% if (eventos.length === 0) { %>
        <div class="p-8 text-center">
          <svg class="w-16 h-16 text-primary-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          <h3 class="text-lg font-medium text-primary-600 mb-2">Nenhum evento criado ainda</h3>
          <p class="text-primary-500 mb-4">Comece criando seu primeiro evento!</p>
          <a href="/organizador/eventos/criar" class="inline-block bg-primary-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-primary-700 transition-colors duration-200">
            Criar Primeiro Evento
          </a>
        </div>
      <% } else { %>
        <% eventos.forEach(evento => { %>
          <div class="evento-item p-6 hover:bg-primary-50 transition-colors duration-200" data-evento-id="<%= evento.id %>">
            <div class="flex items-center justify-between">
              <!-- Informações do evento -->
              <div class="flex items-center space-x-4 flex-1">
                <!-- Imagem do evento -->
                <div class="w-20 h-20 bg-primary-100 rounded-lg flex items-center justify-center overflow-hidden flex-shrink-0">
                  <% if (evento.url_imagem_capa) { %>
                    <img src="<%= evento.url_imagem_capa %>" alt="<%= evento.nome_evento %>" class="w-full h-full object-cover">
                  <% } else { %>
                    <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                  <% } %>
                </div>

                <!-- Detalhes do evento -->
                <div class="flex-1 min-w-0">
                  <h3 class="text-lg font-semibold text-primary-800 truncate"><%= evento.nome_evento %></h3>
                  <div class="flex items-center space-x-4 text-sm text-primary-600 mt-1">
                    <span class="flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                      </svg>
                      <%= new Date(evento.data_hora_inicio).toLocaleDateString('pt-BR') %>
                    </span>
                    <span class="flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <%= new Date(evento.data_hora_inicio).toLocaleTimeString('pt-BR', {hour: '2-digit', minute: '2-digit'}) %>
                    </span>
                    <span class="flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      </svg>
                      <%= evento.local_evento %>
                    </span>
                  </div>
                  <% if (evento.descricao) { %>
                    <p class="text-primary-600 text-sm mt-2 line-clamp-2"><%= evento.descricao %></p>
                  <% } %>
                </div>

                <!-- Status do evento -->
                <div class="flex-shrink-0">
                  <% 
                    const agora = new Date();
                    const dataEvento = new Date(evento.data_hora_inicio);
                    const isPassado = dataEvento < agora;
                    const isHoje = dataEvento.toDateString() === agora.toDateString();
                  %>
                  <% if (isPassado) { %>
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      Finalizado
                    </span>
                  <% } else if (isHoje) { %>
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      Hoje
                    </span>
                  <% } else { %>
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      Futuro
                    </span>
                  <% } %>
                </div>
              </div>

              <!-- Ações -->
              <div class="flex items-center space-x-2 ml-4">
                <!-- Ver detalhes -->
                <a href="/eventos/<%= evento.id %>" target="_blank" class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200" title="Ver página pública">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                  </svg>
                </a>

                <!-- Editar -->
                <a href="/organizador/eventos/<%= evento.id %>/editar" class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200" title="Editar evento">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                </a>

                <!-- Gerenciar ingressos -->
                <a href="/organizador/eventos/<%= evento.id %>/ingressos" class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200" title="Gerenciar ingressos">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                  </svg>
                </a>

                <!-- Gerenciar line-up -->
                <a href="/organizador/eventos/<%= evento.id %>/lineup" class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200" title="Gerenciar line-up">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"></path>
                  </svg>
                </a>

                <!-- Menu de ações -->
                <div class="relative">
                  <button class="text-primary-600 hover:text-primary-700 p-2 rounded-lg hover:bg-primary-100 transition-colors duration-200" onclick="toggleMenu(<%= evento.id %>)">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                    </svg>
                  </button>
                  
                  <div id="menu-<%= evento.id %>" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-primary-200 z-10">
                    <div class="py-1">
                      <button onclick="duplicarEvento(<%= evento.id %>)" class="block w-full text-left px-4 py-2 text-sm text-primary-700 hover:bg-primary-50">
                        Duplicar Evento
                      </button>
                      <button onclick="confirmarExclusao(<%= evento.id %>)" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                        Excluir Evento
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>
  </div>
</div>

<!-- Modal de confirmação de exclusão -->
<div id="modal-exclusao" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
  <div class="bg-white rounded-xl p-6 max-w-md w-full mx-4">
    <h3 class="text-lg font-semibold text-primary-800 mb-4">Confirmar Exclusão</h3>
    <p class="text-primary-600 mb-6">Tem certeza que deseja excluir este evento? Esta ação não pode ser desfeita.</p>
    <div class="flex items-center justify-end space-x-4">
      <button onclick="fecharModalExclusao()" class="px-4 py-2 text-primary-600 hover:text-primary-700">
        Cancelar
      </button>
      <button id="confirmar-exclusao" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">
        Excluir
      </button>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const buscaNome = document.getElementById('busca-nome');
  const filtroStatus = document.getElementById('filtro-status');
  const filtroData = document.getElementById('filtro-data');
  const limparFiltros = document.getElementById('limpar-filtros');
  const eventosItems = document.querySelectorAll('.evento-item');

  // Função de filtro
  function aplicarFiltros() {
    const termoBusca = buscaNome.value.toLowerCase();
    const statusSelecionado = filtroStatus.value;
    const dataSelecionada = filtroData.value;

    eventosItems.forEach(item => {
      const nomeEvento = item.querySelector('h3').textContent.toLowerCase();
      const dataEvento = new Date(item.querySelector('[data-evento-id]').dataset.eventoId); // Seria necessário adicionar data como atributo
      const agora = new Date();
      
      let mostrar = true;

      // Filtro por nome
      if (termoBusca && !nomeEvento.includes(termoBusca)) {
        mostrar = false;
      }

      // Filtro por status (implementação simplificada)
      if (statusSelecionado) {
        // Lógica de filtro por status seria implementada aqui
      }

      // Filtro por data
      if (dataSelecionada) {
        // Lógica de filtro por data seria implementada aqui
      }

      item.style.display = mostrar ? 'block' : 'none';
    });
  }

  // Event listeners para filtros
  buscaNome.addEventListener('input', aplicarFiltros);
  filtroStatus.addEventListener('change', aplicarFiltros);
  filtroData.addEventListener('change', aplicarFiltros);

  // Limpar filtros
  limparFiltros.addEventListener('click', function() {
    buscaNome.value = '';
    filtroStatus.value = '';
    filtroData.value = '';
    aplicarFiltros();
  });
});

// Funções globais para ações
let eventoParaExcluir = null;

function toggleMenu(eventoId) {
  const menu = document.getElementById(`menu-${eventoId}`);
  // Fechar outros menus
  document.querySelectorAll('[id^="menu-"]').forEach(m => {
    if (m.id !== `menu-${eventoId}`) {
      m.classList.add('hidden');
    }
  });
  menu.classList.toggle('hidden');
}

function duplicarEvento(eventoId) {
  alert('Funcionalidade de duplicação será implementada em breve!');
  toggleMenu(eventoId);
}

function confirmarExclusao(eventoId) {
  eventoParaExcluir = eventoId;
  document.getElementById('modal-exclusao').classList.remove('hidden');
  toggleMenu(eventoId);
}

function fecharModalExclusao() {
  document.getElementById('modal-exclusao').classList.add('hidden');
  eventoParaExcluir = null;
}

document.getElementById('confirmar-exclusao').addEventListener('click', async function() {
  if (!eventoParaExcluir) return;

  try {
    const response = await fetch(`/organizador/eventos/${eventoParaExcluir}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });

    const resultado = await response.json();

    if (response.ok) {
      // Remover o item da lista
      const item = document.querySelector(`[data-evento-id="${eventoParaExcluir}"]`).closest('.evento-item');
      item.remove();
      
      mostrarMensagem(resultado.message || 'Evento excluído com sucesso!', 'success');
    } else {
      mostrarMensagem(resultado.error || 'Erro ao excluir evento', 'error');
    }
  } catch (error) {
    console.error('Erro:', error);
    mostrarMensagem('Erro de conexão. Tente novamente.', 'error');
  }

  fecharModalExclusao();
});

function mostrarMensagem(texto, tipo) {
  const mensagemResultado = document.getElementById('mensagem-resultado');
  mensagemResultado.textContent = texto;
  mensagemResultado.className = `mb-6 p-4 rounded-lg ${
    tipo === 'success' 
      ? 'bg-green-100 border border-green-400 text-green-700' 
      : 'bg-red-100 border border-red-400 text-red-700'
  }`;
  mensagemResultado.classList.remove('hidden');
  
  setTimeout(() => {
    mensagemResultado.classList.add('hidden');
  }, 5000);
}

// Fechar menus ao clicar fora
document.addEventListener('click', function(e) {
  if (!e.target.closest('[onclick^="toggleMenu"]') && !e.target.closest('[id^="menu-"]')) {
    document.querySelectorAll('[id^="menu-"]').forEach(menu => {
      menu.classList.add('hidden');
    });
  }
});
</script>

