<div class="container mx-auto px-4">
  <h1 class="text-3xl font-bold text-center text-gray-800 mb-8">Eventos Disponíveis</h1>
  
  <div id="mensagem-resultado" class="hidden"></div>
  
  <div id="lista-eventos" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    <!-- Os eventos serão carregados aqui dinamicamente -->
    <p class="col-span-full text-center py-8 text-gray-500">Carregando eventos...</p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const listaEventos = document.getElementById('lista-eventos');
    const mensagemResultado = document.getElementById('mensagem-resultado');
    
    // Verificar se o usuário está logado
    const token = localStorage.getItem('token');
    const usuarioInfo = JSON.parse(localStorage.getItem('usuarioInfo') || '{}');
    
    // Função para carregar eventos
    async function carregarEventos() {
      try {
        const resposta = await fetch('/api/eventos', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            // Incluir token de autenticação se disponível
            ...(token && { 'Authorization': `Bearer ${token}` })
          }
        });
        
        if (!resposta.ok) {
          throw new Error('Falha ao carregar eventos');
        }
        
        const eventos = await resposta.json();
        
        // Limpar a mensagem de carregamento
        listaEventos.innerHTML = '';
        
        if (eventos.length === 0) {
          listaEventos.innerHTML = '<p class="col-span-full text-center py-8 text-gray-500">Nenhum evento disponível no momento.</p>';
          return;
        }
        
        // Renderizar cada evento
        eventos.forEach(evento => {
          const dataEvento = new Date(evento.data_hora_inicio);
          const dataFormatada = dataEvento.toLocaleDateString('pt-BR');
          const horaFormatada = dataEvento.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
          
          const eventoElement = document.createElement('div');
          eventoElement.className = 'bg-white rounded-lg overflow-hidden shadow-md transition-transform duration-300 hover:transform hover:-translate-y-1 hover:shadow-lg';
          eventoElement.innerHTML = `
            <div class="h-48 overflow-hidden">
              <img src="${evento.url_imagem_capa || '/assets/evento-default.jpg'}" alt="${evento.nome_evento}" class="w-full h-full object-cover">
            </div>
            <div class="p-6">
              <h3 class="text-xl font-semibold text-gray-800 mb-2">${evento.nome_evento}</h3>
              <p class="text-gray-600 mb-2"><svg class="inline-block w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg> ${dataFormatada} às ${horaFormatada}</p>
              <p class="text-gray-600 mb-4"><svg class="inline-block w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path></svg> ${evento.local_evento}</p>
              <a href="/eventos/${evento.id}" class="block text-center bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition duration-150 ease-in-out">Ver Detalhes</a>
            </div>
          `;
          
          listaEventos.appendChild(eventoElement);
        });
        
      } catch (erro) {
        console.error('Erro:', erro);
        mensagemResultado.textContent = 'Erro ao carregar eventos. Tente novamente mais tarde.';
        mensagemResultado.className = 'alert-error bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4';
      }
    }
    
    // Carregar eventos ao iniciar a página
    carregarEventos();
  });
</script>
